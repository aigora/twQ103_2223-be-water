#include<stdio.h>
#include <stdlib.h>
#include <string.h>
#include <locale.h> //para ï¿½adir tildes y la letra ï¿½


struct TnombreFichero{
	int anyo;
	int mes;
	char barrio[50];

};

struct Tfuentes{
	char nombre [100]; 
	float pH;
	int conductividad;
	int turbidez;
	int coliformes;
};

void imprimirnombreFichero(struct TnombreFichero nombreFichero) {
	printf("%d%d_%s", nombreFichero.anyo,nombreFichero.mes,nombreFichero.barrio);
}

void getCsv()
{
    char filename[50];
    char linea[250];
    char **datos;
    const char* delimiter = ",";

    datos = malloc(sizeof(linea) * 5);
    printf("Introduzca nombre archivo:\n");
    scanf("%s", filename);
    FILE* file = fopen(filename, "r");
    if (file == NULL) {
        printf("No se pudo abrir el archivo.\n");
        return;
    }
    while (fgets(linea, sizeof(linea), file))
    {
        linea[strcspn(linea, "\n")] = '\0'; // Para quitar salto de linea
        int i = 0;
        char* token = strtok(linea, delimiter);
        while (token != NULL)
        {
            datos[i] = malloc(strlen(token) + 1);
            strcpy(datos[i], token);
            i++;
            token = strtok(NULL, delimiter);
        }

		/*	Cambiar prints por lo que querais hacer con los datos, estan guardados en forma de matriz char**
			datos[0] = Parametros
			datos[1] = pH
			datos[2] = Conductividad
			datos[3] = Turbidez
			datos[4] = Coliformes
			para analizar los datos usad atoi() para pasar a int y asi compararlos mejor;
		*/
        printf("Parametros: %s\n", datos[0]);
        printf("pH: %s\n", datos[1]);
        printf("Conductividad: %s\n", datos[2]);
        printf("Turbidez: %s\n", datos[3]);
        printf("Coliformes: %s\n", datos[4]);
        printf("\n");
    }

    fclose(file);
}



int anyadirdatos(){
	struct TnombreFichero nombreFichero ;
	struct Tfuentes fuentes [50];
	int i, nfuentes;
	char nombreArchivo [100];
	char fichero;
	
	//nos aseguramos que todos los ficheros tengan el mismo nombre.
	
	do{
	printf("Introduzca el aï¿½o del estudios:\n");
	scanf("%d", &nombreFichero.anyo);
    } while (nombreFichero.anyo < 0); //nos aseguramos que no aï¿½adan aï¿½os negativos
    
    do{
	printf("Introduzca el mes del estudio:\n");
	scanf("%d", &nombreFichero.mes);
	} while (nombreFichero.mes < 1 || nombreFichero.mes>12);//nos aseguramos que introduzca un mes real
	
	printf("Introduzca el barrio del estudio (Por favor, introducir la primera letra en mayï¿½scula).:\n");
	scanf("%s", nombreFichero.barrio);
	
	imprimirnombreFichero(nombreFichero);
	sprintf(nombreArchivo, "%d%d_%s.txt", nombreFichero.anyo, nombreFichero.mes, nombreFichero.barrio);//metemos los datos en una variable para nombrar el fichero
	
	FILE * fentrada;
	FILE * fsalida;
	
	//Creamos fichero
	fentrada = fopen (nombreArchivo,"w");
	if (fentrada == NULL){
		printf("\nError en la apertura de ficheros\n");
		return 1;
	} else{
		printf("\nArchivo creado con ï¿½xito.");
	}
	
	system("pause");
    system("cls");
    
    do{
    	printf("Introduzca el nï¿½mero de fuentes:\n");
    	scanf("%d", &nfuentes);
	}while (nfuentes<1);
	
	fprintf(fentrada,"Parametros\t pH\t Conductivida\t Turbidez\t Coliformes\n");
	for  (i=0; i<nfuentes; i++){
		fflush(stdin);
		do{
			printf("Introduce el pH de la fuente %d\n", i+1);
    		scanf("%f", &fuentes[i].pH);
		}while (fuentes[i].pH<0 || fuentes[i].pH>14);//nos aseguramos que el pH introducido sea vï¿½lido
		
    	printf("Introduce la conductividad de la fuente %d\n", i+1);
    	scanf("%d", &fuentes[i].conductividad);
    	printf("Introduce la turbidez de la fuente %d\n", i+1);
    	scanf("%d", &fuentes[i].turbidez);
    	printf("Introduce los coliformes de la fuente %d\n", i+1);
    	scanf("%d", &fuentes[i].coliformes);
    	fprintf(fentrada, "Fuente_%d\t %.2f\t          %d\t  %d\t          %d\n", i+1, fuentes[i].pH, fuentes[i].conductividad, fuentes[i].turbidez, fuentes[i].coliformes);
	}
    fclose(fentrada);
    
    printf("\n Los datos han sido guardados en la base de datos. \n");
    
	fentrada = fopen(nombreArchivo, "r");
 
    if(fentrada == NULL){
       printf("	Error en la apertura del fichero\n");
       return 0;
    }

    while(((fichero = fgetc(fentrada))) != EOF) {
        printf("%c", fichero);
    }
	
	fclose(fentrada);
     
}

int analizardatos (){
	struct TnombreFichero nombreFichero ;
	char nombreArchivo [100];
	char fichero;
	int opcion1;
	int opcion2, opcion3, opcion4, opcion5;
	
	FILE * fentrada;
	FILE * fsalida;
	
	do{
	printf("Introduzca el aï¿½o del estudios:\n");
	scanf("%d", &nombreFichero.anyo);
    } while (nombreFichero.anyo < 0); //nos aseguramos que no aï¿½adan aï¿½os negativos
    
    do{
	printf("Introduzca el mes del estudio (entre 1 y 12):\n");
	scanf("%d", &nombreFichero.mes);
	} while (nombreFichero.mes < 1 || nombreFichero.mes > 12);//nos aseguramos que introduzca un mes real
	
	printf("Introduzca el barrio del estudio (Por favor, introducir la primera letra en mayï¿½scula).:\n");
	scanf("%s", nombreFichero.barrio);
	
	sprintf(nombreArchivo, "%d%d_%s.txt", nombreFichero.anyo, nombreFichero.mes, nombreFichero.barrio);
	
	fentrada = fopen(nombreArchivo, "r");//buscamos el fichero
	
    if(fentrada == NULL){
       printf("	Error en la apertura del fichero. Este fichero no existe en la base de datos. Si desea ï¿½adirlo dirï¿½gase al menï¿½ y pulse la opciï¿½n 1. \n");
       return 0;
    }//si el fichero no existe indicamos al usuario que cree el fichero.
    
	printf("\n El fichero contiene los siguientes datos:\n ");
	printf("\n");
	
    while(((fichero = fgetc(fentrada))) != EOF) {
        printf("%c", fichero);
    }
	
//	fclose(fentrada); aun no se si hay que cerrarlo
	
	system("pause");
	
	system("cls");
	
	
	do{
		printf("A continuaciï¿½n, indique el dato que desee saber:\n");
		printf("1. Saber valores mï¿½ximos y mï¿½nimos de los parï¿½metros.\n");
		printf("2. Calcular la media de un parï¿½metro.\n");
		printf("3. Ordenar los parï¿½metros de menor a mayor.\n");
		printf("4. Ordenar los parï¿½metros de mayor a menor");
		printf("5. Volver al menï¿½ principal");
		
		do{
        	printf("Introduce una opcion:\n");
        	fflush( stdin );
        	scanf( "%d", &opcion1);
        } while ( opcion1 < 1 || opcion1 > 5 );
        
		
		switch (opcion1)
		{
		case 1:
				system("cls");
				do{
					printf("Elija el parametro para calcular su maximo y minimo: \n");
					printf("1. pH\n");
					printf("2. Conductividad.\n");
					printf("3. Turbidez\n");
					printf("4. Coloides");
					scanf("%d", &opcion2);
					
				}while(opcion2 != 1 || opcion2 !=2);
			break;
			
		case 2:
				system("cls");
				do{
					printf("Elija el parï¿½metro para calcular la media opciï¿½n: \n");
					printf("1. pH\n");
					printf("2. Conductividad.\n");
					printf("3. Turbidez\n");
					printf("4. Coloides");
					scanf("%d", &opcion3);
				}while(opcion3 < 1 || opcion3 >4);
			break;
			
			case 3:
				system("cls");
				do{
					printf("Elija el parï¿½metro para ordenarlo de menor a mayor: \n");
					printf("1. pH\n");
					printf("2. Conductividad.\n");
					printf("3. Turbidez\n");
					printf("4. Coloides");
					scanf("%d", &opcion4);
				}while(opcion4 < 1 || opcion4 >4);
			break;
			
			case 4:
				system("cls");
				do{
					printf("Elija el parï¿½metro para ordenarlo de menor a mayor: \n");
					printf("1. pH\n");
					printf("2. Conductividad.\n");
					printf("3. Turbidez\n");
					printf("4. Coloides");
					scanf("%d", &opcion5);
				}while(opcion5 < 1 || opcion5 >4);
			break;

		}
	} while (opcion1 != 5);
	
	return 0;
     
}

//cuerpo del programa

int main (){
	setlocale(LC_ALL, "spanish");
	int opcion;
	
	do {
        printf("Bienvenido al Programa be water. Gracias por usar nuestros servicios. A continuaciï¿½n, indique lo que desee realizar \n");
        printf("1. Aï¿½ADIR DATOS\n");
        printf("2. ANALIZAR DATOS\n");
        printf("3. VER EVOLUCIï¿½N\n");
        printf("4. GUï¿½A DE PARï¿½METROS\n");
        printf("5. SALIR\n");
        
		do{
        	printf("Introduce una opcion:\n");
        	fflush( stdin );
        	scanf( "%d", &opcion);
        } while ( opcion < 1 || opcion > 6 );
        
        
        switch ( opcion )
        {
            case 1: 
				system("cls");
        		printf("\t \t \t || Aï¿½ADIR DATOS || \n");
        		printf("\n");
        		anyadirdatos();
        		system("pause");
        		system("cls");
            break;
            
            case 2:
            	system("cls");
        		printf("\t \t \t || ANALIZAR DATOS || \n");
        		printf("\n");
        		analizardatos();
        		system("pause");
        		system("cls");
        	break;
        	
        	case 3:
        		system("cls");
        		printf("\t \t \t || VER EVOLUCIï¿½N || \n");
        		system("pause");
        		system("cls");
        	break;
        	
        	case 4:
        		system("cls");
        		printf("\t \t \t ||  GUIA DE PARAMETROS || \n");
        		system("pause");
        		system("cls");
        	break;
			case 6:
				getCsv();
        }
	} while ( opcion != 6 );
	
	return 0;
	
}
